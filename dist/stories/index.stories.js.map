{"version":3,"file":"index.stories.js","sourceRoot":"","sources":["../../stories/index.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAkB,MAAM,KAAK,CAAC;AAC3C,OAAO,6BAA6B,CAAC;AACrC,OAAO,EAAE,UAAU,EAAE,MAAM,kCAAkC,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,eAAe;IACb,KAAK,EAAE,iBAAiB;IACxB,SAAS,EAAE,mBAAmB;IAC9B,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,MAAM;YACf,WAAW,EACT,uKAAuK;SAC1K;QACD,MAAM,EAAE;YACN,OAAO,EAAE,QAAQ;YACjB,WAAW,EAAE,iCAAiC;YAC9C,OAAO,EAAE,UAAU;SACpB;KACF;CACF,CAAC;AAaF,MAAM,QAAQ,GAAoB,CAAC,EAAE,OAAO,EAAY,EAAE,EAAE,CAAC,IAAI,CAAA;gCACjC,OAAO,IAAI,EAAE;CAC5C,CAAC;AAEF,MAAM,cAAc,GAAoB,CAAC,EAAE,MAAM,EAAY,EAAE,EAAE;IAC/D,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;IAC1B,OAAO,IAAI,CAAA,2CAA2C,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAEzC,MAAM,CAAC,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,aAAa,CAAC,IAAI,GAAG;IACnB,OAAO,EAAE,oCAAoC;CAC9C,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpD,YAAY,CAAC,IAAI,GAAG;IAClB,MAAM,EAAE,IAAI;CACb,CAAC","sourcesContent":["import { html, TemplateResult } from 'lit';\nimport '../src/bldn-priv-request.js';\nimport { allLocales } from '../src/generated/locale-codes.js';\nimport { setLocale } from '../src/utils/localization.js';\n\nexport default {\n  title: 'BldnPrivRequest',\n  component: 'bldn-priv-request',\n  argTypes: {\n    actions: {\n      control: 'text',\n      description:\n        'JSON list of [actions](https://github.com/blindnet-io/product-management/blob/main/refs/schemas/priv/json-schema/priv-terms.schema.json) to include in the component.',\n    },\n    locale: {\n      control: 'select',\n      description: 'Language code for the component',\n      options: allLocales,\n    },\n  },\n};\n\ninterface Story<T> {\n  (args: T): TemplateResult;\n  args?: Partial<T>;\n  argTypes?: Record<string, unknown>;\n}\n\ninterface ArgTypes {\n  actions?: string;\n  locale?: string;\n}\n\nconst Template: Story<ArgTypes> = ({ actions }: ArgTypes) => html`\n  <bldn-priv-request actions=\"${actions || ''}\"></bldn-priv-request>\n`;\n\nconst LocaleTemplate: Story<ArgTypes> = ({ locale }: ArgTypes) => {\n  setLocale(locale || 'fr');\n  return html` <bldn-priv-request></bldn-priv-request> `;\n};\n\nexport const Regular = Template.bind({});\n\nexport const CustomActions = Template.bind({});\nCustomActions.args = {\n  actions: '[\"ACCESS\",\"DELETE\",\"TRANSPARENCY\"]',\n};\n\nexport const CustomLocale = LocaleTemplate.bind({});\nCustomLocale.args = {\n  locale: 'fr',\n};\n"]}